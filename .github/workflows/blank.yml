# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  define-charts-matrix:
    runs-on: ubuntu-latest
    outputs:
      charts: ${{ steps.all_charts_list.outputs.all_charts }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      # Runs a single command using the runners shell
      - name: Charts list
        id: all_charts_list
        run: echo "all_charts=$(make all-charts-paths)" >> "$GITHUB_OUTPUT"

      - name: Echo all charts
        run: |
          echo "The captured value is: ${{ steps.all_charts_list.outputs.all_charts }}"

  publish-helm-chart:
    runs-on: ubuntu-latest
    needs:
    - define-charts-matrix
    strategy:
      matrix:
        chart: ${{ fromJSON(needs.define-charts-matrix.outputs.charts) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            ${{ matrix.chart }}
      - name: Check for differences
        id: changes
        run: |
          echo "CHANGED=false" >> ${GITHUB_ENV}
      - name: Push Helm chart on release
        uses: bsord/helm-push@v4.1.0
        # run only if some file in 'matrix.chart' folder was changed
        if: env.CHANGED == 'true'
        with:
          useOCIRegistry: true
          registry-url: oci://ghcr.io/ghta6-78
          username: ${{ vars.PACKAGE_PUSHER_USERNAME }}
          access-token: ${{ secrets.PACKAGE_PUSHER_PAT }}
          force: true
          chart-folder: ${{ matrix.chart }}
      - name: Report chart
        if: env.CHANGED == 'true'
        run: |
          ls ${{ matrix.chart }}
